{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9820946f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({color , text , onClick}) => {\r\n    \r\n    return<button onClick={onClick}\r\n    style = {{backgroundColor : color}}\r\n    className='btn' >{text}</button>\r\n}\r\n\r\nButton.defaultProps ={\r\n    color :'blue',\r\n\r\n}\r\n\r\nButton.protoTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nconst Header = ({title , onAdd , showAdd}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1> {title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps ={\r\n    title :'ToDo Tracker',\r\n  }\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task , onDelete , onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n            <FaTimes style={{color:'red', cursor:'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day} </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\nconst Tasks = ({ tasks , onDelete , onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n           {tasks.map((task) => (\r\n           <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n   const onSubmit=(e)=>{\r\n      e.preventDefault()\r\n\r\n      if(!text)\r\n      {\r\n          alert('Please add Task.')\r\n          return\r\n      }\r\n      if(!day)\r\n      {\r\n          alert('Please add Day & Time.')\r\n          return\r\n      }\r\n    \r\n\r\n      onAdd({text , day , reminder})\r\n\r\n      setText('');\r\n      setDay('');\r\n      setReminder(false)\r\n   }\r\n    \r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add-Task'\r\n                 value={text}\r\n                onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day and Time</label>\r\n                <input type=\"text\" placeholder='Add-Day and Time'\r\n                  value={day}\r\n                  onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                checked={reminder}\r\n                  value={reminder}\r\n                  onChange={(e) => setReminder(e.currentTarget.checked)}  />\r\n            </div>\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState }from 'react'\n\nfunction App() {\n  const [showAddTask , setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState(\n    [\n        {\n            id:1,\n            text:'Doctors Appointment',\n            day:'May 11th at 2.45pm',\n            reminder:true\n        },{\n            id:2,\n            text:'Meeting at School',\n            day:'May 12th at 11.30am',\n            reminder:true\n        },{\n            id:3,\n            text:'Food Shopping',\n            day:'May 10th at 4.00pm',\n            reminder:false\n        }\n    ]\n)\n\n//Delete Task\nconst deleteTask = (id) =>{\n  setTasks(tasks.filter((task) =>  task.id !== id))\n}\n\n//Toggle-Reminder\n\nconst toggleReminder = (id) => {\n console.log(id);\n setTasks(tasks.map((task)=> task.id === id ? {...task , reminder : !task.reminder} : task))\n}\n\n//Add Task\n\nconst addtask = (task)=>{\nconst id = Math.floor(Math.random() * 125) + 1;\nconsole.log(id);\nconst newTask = {id,...task};\nsetTasks([...tasks, newTask])\n}\n\n\n  return (\n    <div className=\"container\">\n     <Header onAdd={ () => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n     {showAddTask && <AddTask onAdd={addtask}/>}\n     {tasks.length > 0 ? <Tasks tasks={tasks} \n     onDelete={deleteTask} onToggle={toggleReminder}/>\n     :\" No Tasks to show !\" }\n     \n    </div>\n  );\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}